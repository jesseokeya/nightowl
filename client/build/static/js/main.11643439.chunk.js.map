{"version":3,"sources":["reducers/resource.js","store/index.js","types/index.js","pages/home/components/liveStream.js","pages/resources/components/listResources.js","pages/resources/index.js","actions/resource.js","pages/home/index.js","pages/App.js","workers/serviceWorker.js","index.js"],"names":["initialState","resources","rootReducer","combineReducers","state","action","type","payload","data","createStore","applyMiddleware","ReduxThunk","LiveStream","props","className","style","margin","maxWidth","width","height","data-auto-scroll","title","border","borderRadius","src","source","ListResources","useState","modalResource","setModalResource","visible","setVisible","videos","filter","resource","name","includes","images","openResource","item","console","log","itemLayout","dataSource","renderItem","Item","onClick","Meta","avatar","selfLink","description","created","onOk","onCancel","alt","controls","Resources","dispatch","useDispatch","useSelector","useEffect","a","axios","get","response","length","Header","Layout","Sider","Content","Home","pathname","window","location","collapsed","setCollapsed","trigger","collapsible","textAlign","marginTop","marginBottom","theme","mode","defaultSelectedKeys","key","icon","HomeOutlined","to","VideoCameraOutlined","SettingOutlined","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","marginLeft","fontWeight","fontSize","color","exact","path","App","store","Store","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.11643439.chunk.js","sourcesContent":["import { FETCH_RESOURCE } from \"../types\";\n\nconst initialState = {\n  resources: [],\n};\n\nexport const resourceReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_RESOURCE:\n      return {\n        ...state,\n        resources: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport { resourceReducer } from '../reducers'\n\nconst rootReducer = combineReducers({\n  resources: resourceReducer\n})\n\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk));","export const FETCH_RESOURCE = \"FETCH_RESOURCE\";","import React, { Fragment } from \"react\";\n\nexport const LiveStream = (props) => {\n  const divStyle = {\n    margin: \"0 auto\",\n    maxWidth: \"100vw\",\n    width: \"100%\",\n    height: \"100%\",\n  };\n\n  const iframeStyle = {\n    margin: \"0 auto\",\n    maxWidth: \"100vw\",\n    width: \"100%\",\n    height: \"32rem\",\n    border: \"1px solid #1C2833\",\n    borderRadius: \"5px\",\n  };\n\n  return (\n    <Fragment>\n      <div className=\"wrap\" style={divStyle} data-auto-scroll=\"true\">\n        <embed />\n        <iframe\n          className=\"iframe\"\n          title=\"nightOwl\"\n          style={iframeStyle}\n          src={props.source}\n        />\n      </div>\n    </Fragment>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { List, Avatar, Modal } from \"antd\";\n\nconst organize = (resources) => {\n  const videos = resources.filter(\n    (resource) => !resource.name.includes(\".jpg\")\n  );\n  const images = resources.filter((resource) => resource.name.includes(\".jpg\"));\n  return { videos, images };\n};\n\nexport const ListResources = (props) => {\n  const [modalResource, setModalResource] = useState({});\n  const [visible, setVisible] = useState(false);\n  const { images, videos } = organize(props.resources);\n\n  const handleOk = () => setVisible(false);\n  const handleCancel = () => setVisible(false);\n\n  const openResource = (item) => {\n    console.log(item);\n    setModalResource(item);\n    setVisible(!visible);\n  };\n\n  return (\n    <Fragment>\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={images}\n        renderItem={(item) => (\n          <List.Item onClick={() => openResource(item)}>\n            <List.Item.Meta\n              avatar={\n                <Avatar src={`http://192.168.0.16:8080${item.selfLink}`} />\n              }\n              title={<span>{item.name}</span>}\n              description={item.created}\n            />\n          </List.Item>\n        )}\n      />\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={videos}\n        renderItem={(item) => (\n          <List.Item onClick={() => openResource(item)}>\n            <List.Item.Meta\n              avatar={\n                <Avatar src=\"https://image.flaticon.com/icons/svg/3003/3003038.svg\" />\n              }\n              title={<span>{item.name}</span>}\n              description={item.created}\n            />\n          </List.Item>\n        )}\n      />\n      <Modal\n        title={modalResource.name}\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        width={\"75%\"}\n      >\n        {modalResource.name && modalResource.name.includes(\".jpg\") ? (\n          <img\n            src={`http://192.168.0.16:8080${modalResource.selfLink}`}\n            alt={modalResource.name}\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ) : (\n          <video\n            controls\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          >\n            <source\n              src={`http://192.168.0.16:8080${modalResource.selfLink}`}\n              type=\"video/mp4\"\n            />\n          </video>\n        )}\n      </Modal>\n    </Fragment>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Empty } from 'antd'\nimport { ListResources } from './components'\nimport { resourceAction } from \"../../actions\";\n\nconst Resources = () => {\n  const dispatch = useDispatch();\n  const { resources } = useSelector((state) => state.resources);\n\n  useEffect(() => {\n    dispatch(resourceAction());\n  }, []);\n\n  return !resources || resources.length <= 0 ? <Empty /> : <ListResources resources={resources} />\n};\n\nexport default Resources;\n","import axios from 'axios'\nimport { FETCH_RESOURCE } from \"../types\";\n\nexport const resourceAction = () => {\n  return async (dispatch) => {\n    const response = await axios.get(\"http://192.168.0.16:8080/api/resources\");\n    dispatch({ type: FETCH_RESOURCE, payload: response.data });\n  };\n};\n","import React, { useState } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  HomeOutlined,\n  VideoCameraOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"../../styles/app.css\";\n\nimport { LiveStream } from \"./components\";\nimport Resources from \"../resources\";\n\nconst { Header, Sider, Content } = Layout;\n\nfunction Home() {\n  const mappings = {\n    \"/\": \"1\",\n    \"/resources\": \"2\",\n    \"/settings\": \"3\",\n  };\n\n  const pathname = window.location.pathname;\n  const [collapsed, setCollapsed] = useState(true);\n  const toggle = () => setCollapsed(!collapsed);\n\n  return (\n    <Layout>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <div\n          className=\"logo\"\n          style={{\n            textAlign: \"center\",\n            marginTop: \"8px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <img\n            src=\"/favicon.ico\"\n            alt=\"Smiley face\"\n            height=\"30\"\n            width=\"30\"\n            style={{ marginTop: \"17px\" }}\n          />\n        </div>\n        <Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultSelectedKeys={mappings[pathname]}\n        >\n          <Menu.Item key=\"1\" icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n            <Link to=\"/resources\">Resources</Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<SettingOutlined />}>\n            <Link to=\"/settings\">Settings</Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {React.createElement(\n            collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n            {\n              className: \"trigger\",\n              onClick: toggle,\n              style: {\n                marginLeft: \"15px\",\n                fontWeight: \"bold\",\n                fontSize: \"25px\",\n                color: \"white\",\n              },\n            }\n          )}\n        </Header>\n        <Content className=\"app-content\">\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\">\n                <LiveStream source=\"http://192.168.0.24:8081\" />\n              </Route>\n              <Route path=\"/resources\">\n                <Resources />\n              </Route>\n              <Route path=\"/settings\"></Route>\n            </Switch>\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Store from \"../store\";\nimport HomePage from \"./home\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <Provider store={Store}>\n          <HomePage />\n        </Provider>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\n\nimport \"antd/dist/antd.css\";\n\nimport * as serviceWorker from './workers/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}